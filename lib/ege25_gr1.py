from time import *
# Решето Эротосфена
t = time()

n = 100_000
a = [1] * (n + 1)
def Erot(n, a):
    k = 2
    while k*k <= n:
        if a[k] == 1: # если k не вычеркнуто
            i = k*k # начать c k*k
            while i <= n: # вычеркнуть кратные k
              a[i] = 0
              i += k      
        k += 1
    return [i for i in range(2, len(a)) if a[i] == 1]
##print(len(Erot(n, a)))
##print(time() - t)

t1 = time()
def isprime(n):
    if n == 1: return 0
    for k in range(2, int(n**0.5) + 1):
        if n % k == 0:
            return 0
    return 1

b = [x for x in range(2, n+1) if isprime(x)]
##print(len(b))
##print(time() - t1)

def Divs(n):
    d = set()
    for k in range(1, int(n**0.5) + 1):
        if n % k == 0:
            d.add(k)
            d.add(n//k)
##        if len(d) > 4:
##            break
    return sorted(d)

##print(Divs(1_487_714))

'''
(№ 3441) (Е. Джобс) Для интервала [33333;55555] найдите числа, которые кратны сумме своих
простых делителей. В качестве ответа приведите числа, для которых сумма простых делителей
больше 250, – сначала найденное число, затем сумму его простых делителей. Примечание: само
число в качестве делителя не учитывается.
'''
##def Divs(n):
##    d = set()
##    for k in range(2, int(n**0.5) + 1):
##        if n % k == 0:
##            if isprime(k): d.add(k)
##            if isprime(n//k): d.add(n//k)
##    return sum(d)
##
##for x in range(33333, 55555+1):
##    k = Divs(x)
##    if k > 250 and x % k == 0:
##        print(x, k)

'''
(№ 4938) Пусть D(N) – шестой по величине (считая с наибольшего) нетривиальный делитель
натурального числа N (нетривиальными считаются все делители, кроме 1 и самого числа).
Например, D(1000) = 50. Если у числа N меньше 6 различных нетривиальных делителей, то
принимаем D(N) = 0. Найдите 5 наибольших натуральных чисел, меньших 500 000 000, для которых
D(N) > 0. В ответе запишите для каждого найденного N сначала значение D(N), а затем общее
количество нетривиальных делителей (в порядке возрастания соответствующих чисел N).
'''
##def Divs(n):
##    d = set()
##    for k in range(2, int(n**0.5) + 1):
##        if n % k == 0:
##            d.add(k)
##            d.add(n//k)
##    d = sorted(d, reverse = 1)
##    return d
##
##i = 0
##for x in range(500_000_000-1, 1, -1):
##    d = Divs(x)
##    dn = d[5] if len(d) >= 6 else 0
##    if dn > 0:
##        print(dn, len(d))
##        i += 1
##    if i == 5: break

'''
(№ 3982) Найдите все натуральные числа, N, принадлежащие отрезку [100 000 000; 300 000 000],
которые можно представить в виде N = 2**m•7**n, где m – нечётное число, n – чётное число.
В ответе запишите все найденные числа в порядке возрастания, а справа от каждого числа –
сумму m+n.
'''
##ans = []
##for m in range(1, 30, 2):
##    for n in range(0, 14, 2):
##        k = 2**m * 7**n
##        if 10**8 <= k <= 3*10**8:
##            ans.append((k, m+n))
##ans.sort()
##print(*ans, sep = '\n')

'''
(№ 3780) Найдите все натуральные числа, принадлежащие отрезку [63 000 000; 75 000 000], у
которых ровно пять различных нечётных делителей (количество чётных делителей может быть любым).
В ответе перечислите найденные числа, справа от каждого числа запишите его наибольший нечётный
делитель.
'''

##def Divs(n):
##    d = set()
##    for k in range(1, int(n**0.5) + 1):
##        if n % k == 0:
##            if k % 2 != 0: d.add(k)
##            if n//k % 2 != 0: d.add(n//k)
##        if len(d) > 5:
##            break
##    return sorted(d)
# Неэфективно
##for x in range(63_000_000, 75_000_000):
##    d = Divs(x)
##    if len(d) == 5:
##        print(x, max(d))

##for x in range(63_000_000, 75_000_000+1):
##    x1 = x
##    while x1 % 2 == 0: x1 /= 2
##    p = x1 ** 0.25
##    if p == int(p) and isprime(p):
##        print(x, int(p**4))

'''
(№ 3927) (А. Богданов) Найдите наименьшее натуральное число, которое имеет ровно 512
делителей. В ответе запишите сначала само число и затем его наибольший простой делитель. Подсказка: используйте основную теорему арифметики.
'''

prime = [x for x in range(1, 1000) if isprime(x)]

def decomp(n1):
    a = []
    n = n1
    for p in prime[:17]:
        i = 0
        while n % p == 0:
            i += 1
            n /= p
        if i != 0: a += [(p, i+1)]
    return a
from functools import *

##for x in range(2**7*3*5*7*11*13*17, 2, -1):
##    k = decomp(x)
##    if len(k) > 0 and reduce(lambda x,y: x*y, [z[1] for z in k]) == 512:
##        print(x, max([p[0] for p in k]))

'''
(№ 3925) (А. Богданов) Найдите наименьшее натуральное число, которое имеет ровно 1000
делителей. В ответе запишите сначала само число и затем его наибольший простой делитель.
Подсказка: используйте основную теорему арифметики.
'''
##for x in range(2**4*3**4*5**4*7*11*13, 2, -1):
##    k = decomp(x)
##    if len(k) > 0 and reduce(lambda x,y: x*y, [z[1] for z in k]) == 1000:
##        print(x, max([p[0] for p in k]))

'''
(№ 5147) Пусть N(k) = 1 850 000 000 + k, где k – натуральное число. Найдите пять наименьших
значений k, при которых N(k) имеет нечётное количество различных чётных делителей. В ответе
запишите найденные значения k в порядке возрастания, справа от каждого значения запишите
число чётных делителей N(k).
'''




























    
